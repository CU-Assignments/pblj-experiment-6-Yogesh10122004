import java.util.*;

class Employee {
    String name;
    int age;
    double salary;

    Employee(String name, int age, double salary) {
        this.name = name;
        this.age = age;
        this.salary = salary;
    }

    @Override
    public String toString() {
        return "Employee{name='" + name + "', age=" + age + ", salary=" + salary + '}';
    }
}

public class Main {
    public static void main(String[] args) {
        List<Employee> employees = new ArrayList<>();
        employees.add(new Employee("Alice", 30, 50000));
        employees.add(new Employee("Bob", 25, 40000));
        employees.add(new Employee("Charlie", 35, 60000));
        employees.add(new Employee("David", 40, 70000));

        // Sort by salary using lambda expression
        employees.sort((e1, e2) -> Double.compare(e1.salary, e2.salary));

        // Print sorted list
        employees.forEach(System.out::println);
    }
}


import java.util.*;
import java.util.stream.*;

class Student {
    String name;
    int marks;

    Student(String name, int marks) {
        this.name = name;
        this.marks = marks;
    }

    public String getName() {
        return name;
    }

    public int getMarks() {
        return marks;
    }
}

public class Main {
    public static void main(String[] args) {
        List<Student> students = new ArrayList<>();
        students.add(new Student("Alice", 80));
        students.add(new Student("Bob", 60));
        students.add(new Student("Charlie", 85));
        students.add(new Student("David", 70));
        students.add(new Student("Eve", 90));

        // Filter students with marks > 75, sort by marks, and display their names
        students.stream()
            .filter(s -> s.getMarks() > 75) // Filter students with marks greater than 75
            .sorted(Comparator.comparingInt(Student::getMarks)) // Sort students by marks
            .map(Student::getName) // Get the names of students
            .forEach(System.out::println); // Print the names
    }
}
